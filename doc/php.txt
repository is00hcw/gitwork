http://zanphp.io/
https://github.com/youzan/zanphp   https://github.com/youzan/zan
• swoole: 高性能的网络通信框架
• yar: RPC框架
• phalcon: PHP MVC框架
https://github.com/youzan/zan    有赞基于 PHP 协程的网络服务框架

框架
https://getcomposer.org/download/
http://phpdebugbar.com/
https://github.com/raveren/kint/
https://github.com/is00hcw/flight
https://github.com/is00hcw/laravel
https://github.com/lixuancn/LaneWeChat
https://github.com/rmccue/Requests  代替curl
https://github.com/meenie/munee  编译
https://github.com/ratchetphp/Ratchet/  websocket服务器
https://github.com/Sybio/ImageWorkshop  图片处理
https://github.com/JosephLenton/PHP-Error
https://github.com/khoaofgod/phpfastcache  cache

http://code.phpedia.net/#8mjt1crw
http://www.phpedia.net/books
https://www.shiyanlou.com/jobs/php

 
http://laravel-china.github.io/php-the-right-way/#use_the_current_stable_version
PHP 5.4 之后, 你可以不用安装和配置功能齐全的 Web 服务器，就可以开始学习 PHP。 要启动内置的 Web 服务器，需要从你的命令行终端进入项目的 Web 根目录，执行下面的命令:
> php -S localhost:8000
curl -s https://getcomposer.org/installer | php
下面的命令, 会下载一个功能齐全的 Apache 和 最新版本的 PHP, 并会设置 WEB 目录 /path/to/your/php/files 运行在 http://localhost:8080:
docker run -d --name my-php-webserver -p 8080:80 -v /path/to/your/php/files:/var/www/html/ php:apache


http://www.thinkphp.cn/info/60.html
http://www.thinkphp.cn/info/155.html

当调试PHP代码时，var_dump()、print_r()和debug_backtrace()是我们最常用的工具。
http://www.tuicool.com/articles/QrERRv  chromephp
http://chromecj.com/web-development/2015-02/365.html   phpconsole
https://github.com/raveren/kint
https://github.com/maximebf/php-debugbar
https://github.com/rehorn/livepool
https://github.com/jokkedk/webgrind
https://github.com/Qihoo360/phptrace/blob/master/README_ZH.md
http://www.linuxde.net/2013/02/12407.html


sudo yum install mysql-server  php php-mysql php-fpm 
/etc/init.d/php-fpm restart   /etc/php-fpm.d/www.conf   http://blog.csdn.net/seanchan/article/details/7680354
$document_root 的参数是由root html那一行定义的，默认是在/etc/nginx/html/
http://blog.csdn.net/keyunq/article/details/45129859

debug
http://blog.csdn.net/molaifeng/article/details/38413161
http://www.linuxde.net/2013/08/15039.html
http://www.linuxde.net/2013/02/12252.html
http://lobert.iteye.com/blog/2068638

xdebug.var_display_max_children // 最多孩子节点数
xdebug.var_display_max_data// 最大字节数
xdebug.var_display_max_depth// 最大深度
 

echo M('device_task')->getLastSql();
http://www.thinkphp.cn/info/146.html

include 'ChromePhp.php';
ChromePhp::log($_SERVER);
https://github.com/is00hcw/chromephp

require_once('FirePHPCore/fb.php');
fb($device_children);


[Xdebug]
;如要启用Xdebug请先注释掉[Zend]和[ZendDebugger]下所有内容解除冲突
zend_extension_ts="D:\upupw\PHP5\ext\php_xdebug.dll"
xdebug.collect_params=1
xdebug.collect_return=1
xdebug.auto_trace=1
xdebug.trace_output_dir="D:\upupw\xdebug\trace"
xdebug.profiler_enable=0
xdebug.profiler_output_dir="D:\upupw\xdebug\profiler" 
xdebug.max_nesting_level=100
xdebug.remote_enable=1
xdebug.remote_host=localhost
xdebug.remote_port=9000
xdebug.remote_handler=dbgp

xdebug.collect_vars=1
xdebug.show_exception_trace = 1    
xdebug.remote_autostart = 1

xdebug.var_display_max_children=128 
xdebug.var_display_max_data=512     
xdebug.var_display_max_depth=7  

xdebug.default_enable = On
xdebug.show_local_vars = 1
xdebug.dump_once = On
xdebug.dump_globals = On
xdebug.dump_undefined = On
xdebug.dump.REQUEST = *
xdebug.cli_color = 2

$ sudo yum update -y
$ sudo yum install httpd-devel php-devel
$ sudo chkconfig httpd on
$ sudo service httpd start
$ sudo vim /var/www/html/index.php
<?php
  phpinfo();
?>