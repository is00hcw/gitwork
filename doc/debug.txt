线上排查
http://blog.csdn.net/huaweitman/article/details/51420687
http://zhongl.iteye.com/blog/1562235    HouseMD, 比BTrace更实用的Java运行诊断工具    2012年淘宝的聚石写了HouseMD，将常用的几个Btrace脚本整合在一起形成一个独立风格的应用，但其核心代码用的是Scala
http://yq.aliyun.com/articles/2390  Greys Java在线问题诊断工具
curl -sLk http://ompc.oss.aliyuncs.com/greys/install.sh|sh
watch -bf *.AdminServiceImpl loginUser params[0]+'|'+params[1]+'|'+returnObj
sc -df *alibaba.Address
https://github.com/oldmanpushcart/greys-anatomy/wiki/greys-pdf   Greys的原理和Btrace一样，依赖了JDK6+提供的Instumentation特性，所以必须要求目标的JDK环境是JDK6及其以上的版本。JRE中由于缺少tools.jar，所以无法直接运行Greys

netstat -aonp | grep tcp| wc -l查看各种状态的TCP连接数量和
netstat -natp|awk ‘{print $7}’|sort|uniq -c|sort -rn按照PID统计TCP连接的数量
tail -10000 stdout.log.2014-08-15 | grep -B2 -A10 -i exception可以查到日志中最近记录的异常。
http://my.oschina.net/LostTimes/blog/532599  
https://yq.aliyun.com/articles/26553

http://www.oschina.net/p/alloylever   Web 开发调试工具 AlloyLever

puer -a route.js -p 8080
ssh 反向连接  远程端口  localhost  本地端口，  还需要再nginx配置proxy pass到远程端口，默认绑定到127.0.0.1

http://blog.lazybee.me/wechat-development/   ssh lazybee.me -R 10000:127.0.0.1:8000  让本地开发环境监听 8000 端口。

http://www.oschina.net/p/eruda   手机网页前端调试面板 Eruda
http://www.browsersync.cn/

http://blog.csdn.net/shootyou/article/details/6622226
netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}' 
常用的三个状态是：ESTABLISHED 表示正在通信，TIME_WAIT 表示主动关闭，CLOSE_WAIT 表示被动关闭。
HTTP协议1.1版规定default行为是Keep-Alive，也就是会重用TCP连接传输多个 request/response

移动
http://blog.csdn.net/freshlover/article/details/42528643  调试WebView需要满足安卓系统版本为Android 4.4+已上。并且需要再你的APP内配置相应的代码，在WebView类中调用静态方法setWebContentsDebuggingEnabled   
http://wiki.jikexueyuan.com/project/chrome-devtools/remote-debugging-on-android.html
http://tid.tenpay.com/?p=6161
http://www.alloyteam.com/2015/03/mobile-web-debug-tool-rosin/   rosin
http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile/
http://js8.in/2013/11/20/%E4%BA%94%E4%B8%AA%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84javascript%E5%92%8Cweb-debug%E6%8A%80%E6%9C%AF/
http://thx.github.io/mobile/debugging-in-mobile/
http://segmentfault.com/blog/laopopo/1190000000731903  debug.js
https://github.com/binnng/debug.js
http://www.jianshu.com/p/82ab631502e1
http://cssor.com/debugging-in-mobile.html
http://www.iinterest.net/2012/05/08/ebugging-mobile-web-applications-withadobe-shadow/   adobe shadow
http://www.debuggap.com/
http://www.cnblogs.com/yuzhongwusan/p/4270219.html weinre
http://blog.csdn.net/freshlover/article/details/42528643  chrome remote

http://my.oschina.net/leejun2005/blog/399108   fiddler
http://www.benben.cc/blog/?p=393  nginx 代理调试
https://github.com/goddyZhao/nproxy