https://yq.aliyun.com/articles/72538?spm=5176.100239.blogcont72534.55.YCh403  《云数据·大计算：海量日志数据分析与应用》Workshop-入口
https://yq.aliyun.com/articles/72581?spm=5176.100239.0.0.fBuUC8  《在线用户行为分析：基于流式计算的数据处理及应用》Workshop-入口
https://yq.aliyun.com/articles/96391?spm=5176.8091938.0.0.DdY8tz  MaxCompute（原ODPS）开发入门指南——数据上云篇
https://help.aliyun.com/document_detail/47451.html?spm=5176.product27797.6.588.iFTE4i
http://fluentular.herokuapp.com/?spm=5176.doc47450.2.4.QlAlOm  fluentd正则表达式
https://yq.aliyun.com/articles/68579?spm=5176.100239.blogcont96391.45.LwAGso  基于阿里云数加·StreamCompute快速构建网站日志实时分析大屏
https://yq.aliyun.com/articles/89645?spm=5176.100239.blogrightarea88294.19.ixruTF  手把手，教你用MaxCompute+OpenSearch搭建分布式搜索引擎
https://yqfile.alicdn.com/6fd363cb00bcc8160e6dc0a8791366690e5cc962.png
https://data.aliyun.com/experience/case1?spm=5176.100239.blogcont96380.54.6CBkuR  快速搭建一个BI销售数据分析系统
https://data.aliyun.com/experience?spm=a2c0j.8278940.630038.1.oqCw0C  数加体验馆
https://help.aliyun.com/document_detail/49571.html?spm=5176.doc42751.6.545.Tqedd2   深度学习
https://yq.aliyun.com/articles/89763?spm=5176.100239.blogcont97659.23.i616P5  阿里云数加（大数据）公开数据集（公测ing）
https://yq.aliyun.com/articles/97659?spm=5176.100239.0.0.l7tVQn  数据库工程师快速上手MaxCompute进行ETL

http://ixirong.com/2015/03/16/something-about-fastdfs/  fastdfs 环境搭建使用及最佳实践


http://blog.javachen.com/2013/04/06/install-cloudera-cdh-by-yum/   使用yum安装CDH Hadoop集群 
http://blog.csdn.net/sweetvvck/article/details/38842665?utm_source=tuicool
wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz 

http://www.infoq.com/cn/news/2014/06/sql-on-hadoop   8个值得关注的SQL-on-Hadoop框架
Apache Drill是一个低延迟的分布式海量数据（涵盖结构化、半结构化以及嵌套数据）交互式查询引擎，使用ANSI SQL兼容语法，支持本地文件、HDFS、HBase、MongoDB等后端存储，支持Parquet、JSON、CSV、TSV、PSV等数据格式。
Apache Kylin是一个开源的分布式分析引擎，提供Hadoop之上的SQL查询接口及多维分析（OLAP）能力以支持超大规模数据，最初由eBay Inc. 开发并贡献至开源社区，并于2015年11月正式毕业成为Apache顶级项目
Impala和Spark SQL，主要基于内存计算，对机器资源要求较高，单条SQL能够满足秒级动态查询响应，但交互页面通常含有多条SQL查询请求，在超大规模数据规模下，动态计算亦难以满足要求。
Kylin是MOLAP，就是将数据先进行预聚合，然后把多维查询变成了key-value查询。核心是Cube，cube是一种预计算技术，基本思路是预先对数据作多维索引，查询时只扫描索引而不访问原始数据从而提速。

Hive是原始的SQL-on-Hadoop解决方案。它是一个开源的Java项目，能够将SQL转换成一系列可以在标准的Hadoop TaskTrackers上运行的MapReduce任务。Hive通过一个metastore（本身就是一个数据库）存储表模式、分区和位置  
Impala是一个针对Hadoop的开源的“交互式”SQL查询引擎。它由Cloudera构建，与Hive不同的是它并没有使用MapReduce执行查询，而是使用了自己的执行守护进程集合，这些进程需要与Hadoop数据节点安装在一起。
Hive适合于长时间的批处理查询分析，而Impala适合于实时交互式SQL查询，Impala给数据分析人员提供了快速实验、验证想法的大数据分析工具。
Presto是一个用Java语言开发的、开源的“交互式”SQL查询引擎。它由Facebook构建，即Hive最初的创建者。
Shark是由UC Berkeley大学使用Scala语言开发的一个开源SQL查询引擎。与Impala和Presto不同的是Shark构建在已有的 Apache Spark数据处理引擎之上。
Apache Drill是一个针对Hadoop的、开源的“交互式”SQL查询引擎。Drill现在由MapR推动，不同的是Drill旨在支持多种后端存储（HDFS、HBase、MongoDB），同时它的一个重点是复杂的嵌套数据集（例如JSON）。
Apache Phoenix是一个用于Apache HBase的开源SQL引擎。它的目标是通过一个嵌入的JDBC驱动对存储在HBase中的数据提供低延迟查询。与之前介绍的其他引擎不同的是，Phoenix提供了HBase数据的读、写操作。
Geode项目开发始于2002年，开始是商业产品GemFire，在2015年4月发布其开源版本Geode。Pivotal Software是GemFire背后的商业公司

Greenplum 采用 Apache 协议开源之后，加上之前的 HAWQ，PostgreSQL 以及 PostGIS，完全可以构建一体化的 PostgreSQL 企业数据架构。
Pivotal宣布将其大数据套件的三个核心组件开源，即基于内存的分布式NoSQL数据库GemFire、基于Hadoop架构的大规模并行SQL 分析处理引擎HAWQ、大规模并行处理分析数据库Greenplum。
Cloud Foundry是VMware于2011年4月12日推出的业界第一个开源PaaS云平台，它支持多种框架、语言、运行时环境、云平台以及应用服务。

Apache Kylin是一个开源的分布式分析引擎，提供Hadoop之上的SQL查询接口及多维分析（OLAP）能力以支持超大规模数据，最初由eBay Inc. 开发并贡献至开源社区。
Apache Kylin旨在减少Hadoop在10亿及百亿规模以上数据级别的情况下的查询延迟，目前底层数据存储基于HBase，具有较强的可伸缩性。Apache Kylin为Hadoop数据提供了ANSI-SQL接口，并且支持大多数的ANSI-SQL的函数；能够支持在秒级别延迟的情况下同Hadoop进行交互式查询；支持多维联机分析处理数据仓库
Apache Zeppelin   是一个类似Spark Notebook的基于web的交互式数据分析工具     http://www.yidianzixun.com/home?page=article&id=0Buo2Hv0

Hue是一个开源的Apache Hadoop UI系统，最早是由Cloudera Desktop演化而来，由Cloudera贡献给开源社区，它是基于Python Web框架Django实现的。  http://www.tuicool.com/articles/zIrqemB   http://demo.gethue.com/#
http://shiyanjun.cn/archives/1002.html
http://demo.gethue.com/
http://play.grafana.org/

ODPS的计算调度逻辑可以支持更复杂编程模型， 针对上面的那种情况，可以在Reduce后面直接执行下一次的Reduce操作，而不需要中间插入一个Map操作。 基于此，ODPS提供了扩展的MapReduce模型，即可以支持Map后连接任意多个Reduce操作，比如Map-Reduce-Reduce。
Hadoop Chain Mappper/Reducer也支持类似的串行化Map或Reduce操作，但和ODPS的扩展MapReduce(MR2)模型有本质的区别， 因为Chain Mapper/Reducer还是基于传统的MapReduce模型，只是可以在原有的Mapper或Reducer后面在增加一个或多个Mapper操作(不允许增加Reducer)。 这带来的好处是用户可以复用之前的Mapper业务逻辑，可以把一个Map或Reduce拆成多个Mapper阶段，但本质上并没有改变底层的调度和IO模型。

Avi Kivity、Dor Laor 和 Benny Schnaider 宣布推出 ScyllaDB，宣称是用 C++ 重写后的 Cassandra，性能提高 10 倍，并且延迟极低。新的 ScyllaDB 每个节点每秒能处理 1 百万交易。
ScyllaDB 和 Seastar 都已经在 GitHub 上开源了。
https://github.com/scylladb/scylla
https://github.com/scylladb/seastar


eBay宣布正式向开源业界推出实时分布式Hadoop数据安全方案Apache Eagle——一套旨在提供高效分布式的流式策略引擎，并集成机器学习对用户行为建立Profile以实时智能保护Hadoop生态系统中大数据安全解决方案。
Apache Kylin是一个分布式分析引擎，在Hadoop之上提供SQL接口及OLAP在线多维分析以支持超大规模数据集。
pache Zeppelin是一个类似Spark Notebook的基于web的交互式数据分析工具
cascading  http://docs.cascading.org/tutorials/etl-log/part1.html
http://bd.memect.com/
http://web.memect.com/

Apache Ignite是一个通用的数据库缓存系统，它不仅支持所有的底层数据库系统，比如RDBMS、NoSQL和HDFS，还支持Write-Through和Read-Through、Write-Behind Caching等可选功能。
Apache Drill是一个低延迟的分布式海量数据（涵盖结构化、半结构化以及嵌套数据）交互式查询引擎，使用ANSI SQL兼容语法，支持本地文件、HDFS、HBase、MongoDB等后端存储，支持Parquet、JSON、CSV、TSV、PSV等数据格式。受Google的Dremel启发，Drill满足上千节点的PB级别数据的交互式商业智能分析场景。
MapR，Apache Drill项目的创建者，Drill最初公布是在 2012年8月，专注于SQL on Hadoop，Cloudera的Impala、Hortonworks的Hive迭代
https://segmentfault.com/a/1190000002652348
http://book.dengjie.org/4.%E5%AE%89%E8%A3%85%20Drill/3.%E5%AE%89%E8%A3%85%20Drill%20%E5%88%B0%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%BC%8F/4.%E5%9C%A8%20Windows%20%E4%B8%8A%E5%AE%89%E8%A3%85%20Drill.html

Optiq SQL parser ->  Apache Calcite
http://www.infoq.com/cn/articles/new-big-data-hadoop-query-engine-apache-calcite
http://blog.csdn.net/yunlong34574/article/details/46375733
Apache Calcite是面向Hadoop新的查询引擎，它提供了标准的SQL语言、多种查询优化和连接各种数据源的能力，除此之外，Calcite还提供了OLAP和流处理的查询引擎。
http://www.infoq.com/cn/articles/new-big-data-hadoop-query-engine-apache-calcite?utm_campaign=rightbar_v2&utm_source=infoq&utm_medium=articles_link&utm_content=link_text

https://github.com/NGDATA/hbase-indexer
Lily HBase Indexer使用SolrCloud来存储HBase的索引数据，当HBase执行写入、更新或删除操作时，Indexer通过HBase的replication功能来把这些操作抽象成一系列的Event事件，并用来保证写入Solr中的HBase索引数据的一致性。并且Indexer支持用户自定义的抽取，转换规则来索引HBase列数据。Solr搜索结果会包含用户自定义的columnfamily:qualifier字段结果，这样应用程序就可以直接访问HBase的列数据。
http://blog.csdn.net/kissmelove01/article/details/45196941

Alluxio  
http://www.alluxio.org/documentation/cn/Running-Hadoop-MapReduce-on-Alluxio.html  在Alluxio上运行Hadoop MapReduce
http://www.alluxio.org/documentation/cn/Running-Alluxio-Locally.html
http://www.alluxio.org/documentation/cn/Building-Alluxio-Master-Branch.html#distro-support
Alluxio提供了UnderFileSystem接口来将各种底层存储与Alluxio整合到一起。


redis  Twemproxy 
https://github.com/springside/springside4/wiki/redis
http://www.cnblogs.com/edwinchen/p/3816938.html
http://blog.joshuawhite.com/java/caching-with-spring-data-redis/
http://www.javabeat.net/spring-data-redis-example/
https://blog.openshift.com/build-cloud-enabled-java-redis-applications-with-spring-on-openshift/
https://www.packtpub.com/books/content/building-applications-spring-data-redis
http://www.ibm.com/developerworks/library/os-springredis/
http://projects.spring.io/spring-data-redis/
http://snowolf.iteye.com/blog/1666908
http://www.javacodegeeks.com/2012/06/using-redis-with-spring.html
https://github.com/xetorthio/jedis/wiki/Getting-started
http://kaveh.ghahremani.me/2012/12/24/twemproxy-redis-quickstart/

ctx = new AnnotationConfigApplicationContext(AppConfig.class);
ctx = new GenericXmlApplicationContext("/META-INF/spring/app-context.xml");
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = LocalRedisConfig.class)
<import resource="redis-context.xml"/>


HttpClient4.3 Fluent API
Request.Get(url).execute().returnContent().asString();
Executor executor = Executor.newInstance(httpClient);
String resultString = executor.execute(Request.Get(url)).returnContent().asString();
http://blog.csdn.net/vector_yi/article/details/24298629


Google Guava中的RateLimiter，实际上就实现了Token Bucket的算法
https://github.com/springside/springside4/wiki/Rate-Limiter
https://github.com/springside/springside4/wiki/Hystrix


Sonar --  是SCM, CI, Issue Tracker和Wiki外，另一个必不可少的项目管理软件.
https://github.com/springside/springside4/wiki/Sonar
https://github.com/springside/springside4/tree/master/support/sonar

storm
http://shiyanjun.cn/archives/977.html

spark
http://shiyanjun.cn/archives/696.html


Zookeeper是一个用户维护配置信息、命名、分布式同步以及分组服务的集中式服务框架，它使用Java语言编写，通过Zab协议来保证节点的一致性。因为Zookeeper是一个CP型系统，所以当网络分区问题发生时，系统就不能注册或查找服务。
Doozer是一个一致性的、分布式存储系统，使用Go语言编写，通过Paxos来保证强一致性，Doozer项目目前已经停止更新并有将近160个分支。和Zookeeper一样，Doozer也是一个CP型系统，在网络分区问题发生时，会有同样的问题。
etcd是一个用于共享配置和服务发现的高可用的键值存储系统，使用Go语言编写，通过Raft来保证一致性，有基于HTTP+JSON的API接口。etcd也是一个强一致性系统，但是etcd似乎支持从non-leaders中读取数据以提高可用性；另外，写操作仍然需要leader的支持，所以在网络分区时，写操作仍可能失败。
http://debugo.com/using-etcd/
http://www.infoq.com/cn/news/2014/07/etcd-cluster-discovery
etcdctl backup可以使集群故障恢复更加容易； 增加 etcdctl member list/add/remove 命令以管理集群
http://m.oschina.net/blog/410864   Python进行分布式系统协调 （ZooKeeper，Consul， etcd ）
https://tonydeng.github.io/2015/11/24/etcd-the-first-using/
https://tonydeng.github.io/2015/10/19/etcd-application-scenarios/
https://yeasy.gitbooks.io/docker_practice/content/etcd/etcdctl.html


Prometheus是一个实现监控功能的系统和服务，它来源于SoundCloud针对StatsD和Graphite所提供的改善监控系统。
Kimball与同是前谷歌人的Ben Darnell、Andy Bonventre等人一起创建了开源数据库CockroachDB。

Paxos
– Zookeeper
– Doozer
– Chubby
Raft
– Etcd

 
http://blog.csdn.net/kisimple/article/details/42075931    taobao  Diamond#1：设计
http://blog.csdn.net/kisimple/article/details/42023495    TFS与Tair的对照表

http://ju.outofmemory.cn/entry/43357  海量小文件问题综述

kvstore
http://www.ttlsa.com/redis/ssdb-redis-alternatives/
http://www.wzxue.com/ssdb/?utm_source=tuicool
http://blog.csdn.net/zhoubl668/article/details/45314319   
http://idning.github.io/coding-for-ssd.html
http://idning.github.io/ssd-cache.html#id36
https://github.com/siddontang/ledisdb
https://github.com/docker/go-redis-server



Apache Kylin是可扩展到PB规模的开源分布式大数据分析引擎，为Apache Hadoop等大型分布式数据平台之上的超大规模数据集提供标准SQL查询及多维分析（OLAP）能力，提供亚秒级的交互式分析能力。Apache Kylin有效的满足了各种挑战，从分析交易数据到日志数据到点击流数据，在百亿及以上规模数据集上体现了优秀的分析性能和良好的用户体验。作为最好的OLAP on Hadoop方案
Kafka 是一个高性能、高可用、易扩展的分布式日志系统将整个数据处理流程解耦

Druid是针对时间序列数据提供低延时的数据写入以及快速交互式查询的的分布式OLAP数据库
为OLAP查询优化过的列式存储结构：Segment. Segment中存储聚合计算后的统计结果. 主要根据时间对Segment文件进行分片存储 基于Yahoo开发的 datasketches 库.  使用Theta Sketch近似算法

Samza是一个分布式的实时计算框架；支持低延时的、有状态的实时计算 Samza基于RocksDB实现本地状态存储

Lambda架构  http://www.jianshu.com/p/b6bf05332c18
http://blog.csdn.net/brucesea/article/details/45937875
http://www.infoq.com/cn/articles/stock-market-event-processing-engine-based-on-Lambda
Nathan Marz的大作Big Data: Principles and best practices of scalable real-time data systems介绍了Labmda Architecture的概念
Lambda架构是由Storm的作者Nathan Marz提出的一个实时大数据处理框架。Lambda架构的目标是设计出一个能满足实时大数据系统关键特性的架构，包括有：高容错、低延时和可扩展等。Lambda架构整合离线计算和实时计算，融合不可变性（Immunability），读写分离和复杂性隔离等一系列架构原则，可集成Hadoop，Kafka，Storm，Spark，Hbase等各类大数据组件。