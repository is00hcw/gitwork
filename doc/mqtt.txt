https://bce.baidu.com/doc/IOT/Quickstart.html#.E6.A6.82.E8.BF.B0
http://mqttfx.org/
http://websocketshow.fc.bdysite.com/
https://github.com/arvindr21/mqttApp
https://rndm.io/go-and-mqtt/


http://yunba.io/docs/#使用-socket.io-api
http://yunba.io/account/apps/details/54852d1352be1f7e1dd83351/#showPublish
http://sock.yunba.io:3000/examples/yunba_javascript_demo.html
http://dataguild.org/?p=6817
http://mitsuruog.github.io/what-mqtt/

VerneMQ 是一个分布式的MQTT消息代理。它兼容MQTT 3.1和3.1.1规范，并且正在整合MQTT-SN协议。
https://github.com/mqtt/mqtt.github.io/wiki/servers
https://github.com/mqtt/mqtt.github.io/wiki/libraries

var yunba = new Yunba({server:'sock.yunba.io', port:3000, appkey:'52fcc04c4dc903d66d6f8f92'});
socket.emit("connect", new JSONObject("{'appkey': '" + APPKEY + "'}"));

http://rest.yunba.io:8080/<method>/<app-key>/<secret-key>/<topic>/<your_mesage>
curl -l -H "Content-type: application/json" -X POST -d '{"method":"publish", "appkey":"53ea21cd4e9f46851d5a57b5", "seckey":"sec-QMirTLEpuNC6tIUynXXXXNfrlWDbgDV64iDnjdni4QFyXXXX", "topic":"rocket", "msg":"just test"}' http://rest.yunba.io:8080


http://xiaopei.li/wiki/doku.php?id=it:mqtt
https://github.com/mqtt/mqtt.github.io/wiki/software?id=software
https://github.com/mcollina/mosca


http://www.w3hacker.com/?p=1307
wget http://mosquitto.org/files/source/mosquitto-0.15.tar.gz
git clone http://git.eclipse.org/gitroot/paho/org.eclipse.paho.mqtt.java.git
org.eclipse.paho.client.mqttv3 - client library
org.eclipse.paho.sample.mqttv3app - sample application


http://www.infoq.com/articles/practical-mqtt-with-paho
https://www.eclipse.org/paho/clients/java/
http://www.slideshare.net/andypiper/mqtt-27769811   
sudo apt-add-repository ppa:mosquitto-dev/mosquitto-ppa
 sudo apt-get install mosquitto rabbitmq
<repositories>
  <repository>
    <id>paho-mqtt-client</id>
    <name>Paho MQTT Client</name>
    <url>https://repo.eclipse.org/content/repositories/paho-releases/</url>
  </repository>
</repositories>
<dependencies>
  <dependency>
    <groupId>org.eclipse.paho</groupId>
    <artifactId>mqtt-client</artifactId>
    <packaging>jar</packaging>
    <version>0.4.0</version>
  </dependency>
</dependencies>

curl -O https://repo.eclipse.org/content/repositories/paho-releases/org/eclipse/paho/org.eclipse.paho.client.mqttv3/1.0.1/org.eclipse.paho.client.mqttv3-1.0.1.jar

wget https://repo.eclipse.org/content/repositories/paho-releases/org/eclipse/paho/org.eclipse.paho.client.mqttv3/1.0.0/org.eclipse.paho.client.mqttv3-1.0.0.jar

mvn install:install-file -DartifactId=mqtt-client -DgroupId=org.eclipse.paho -Dversion=1.0.0  -Dpackaging=jar -Dfile=./org.eclipse.paho.client.mqttv3-1.0.0.jar

paho
http://xiaoxinzhou.blog.163.com/blog/static/207045386201454113038934/
http://xiaoxinzhou.blog.163.com/blog/static/20704538620145411306821/

javascript
https://www.ibm.com/developerworks/community/blogs/cee6c09c-a315-4b04-ad14-57d6a60fa8bb/entry/publishing_to_mosquitto_with_python_node_js_and_java?lang=en
https://www.eclipse.org/paho/clients/js/
http://download.eclipse.org/paho/1.0/paho.javascript-1.0.1.zip
http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js
http://www.tuicool.com/articles/mYBjie
http://jpmens.net/2014/07/03/the-mosquitto-mqtt-broker-gets-websockets-support/



android
http://minor.hatenablog.com/entry/2015/02/15/214730
https://developer.motorolasolutions.com/docs/DOC-2315


server
http://dl.bintray.com/andsel/generic/distribution-0.6-bundle-tar.tar.gz
https://github.com/andsel/moquette


nodejs
http://blog.shiqichan.com/introducing-mqtt/
http://my.oschina.net/comfiger/blog/369713
http://thejackalofjavascript.com/getting-started-mqtt/
http://blog.yuansc.com/2015/01/09/MQTT-Nodejs%E5%AE%9E%E7%8E%B0-Mosca%E7%AE%80%E4%BB%8B/
http://qiita.com/kgbu/items/f5d6c7c7d6579ef8c0a7
基于Node.js的MQTT Broker: Mosca，https://github.com/mcollina/mosca
基于Node.js的MQTT client library：https://github.com/adamvr/MQTT.js/


mosquitto
http://mosquitto.org/download/
http://blog.csdn.net/xukai871105/article/details/39252653
http://blog.csdn.net/xukai871105/article/details/39346461
http://blog.csdn.net/xukai871105/article/details/39255089
http://blog.csdn.net/xukai871105/article/details/23301213


java
http://blog.csdn.net/zhu_tianwei/article/details/42983867

rocketmq
http://www.sxt.cn/u/756/blog/3238

http://blog.csdn.net/justinjing0612/article/details/38322353    微信、陌陌等著名IM软件设计架构详解

源码分析
WebSocketServerProtocolHandler  SslHandler  标准处理
pipeline.addLast("decoder", new MQTTDecoder());
pipeline.addLast("encoder", new MQTTEncoder());

NettyAcceptor -> NettyMQTTHandler  -> SimpleMessaging.onEvent 通过反射annotation回调不同消息处理函数 ->  ProtocolProcessor
SubscriptionsStore 订阅树形结构， 根据topic的路径构建树


http://www.cnblogs.com/yudar/p/4642412.html  websocket
https://github.com/hasalex/mqtt-example
http://jpmens.net/2014/07/03/the-mosquitto-mqtt-broker-gets-websockets-support/       https://github.com/jpmens/simple-mqtt-websocket-example/blob/master/index.html
http://www.xappsoftware.com/wordpress/2015/05/18/six-steps-to-install-mosquitto-1-4-2-with-websockets-on-debian-wheezy/comment-page-1/
http://www.element14.com/community/community/design-challenges/sci-fi-your-pi/blog/2015/06/22/pizzapi-mosquitto-websockets-success-tutorial    mosquitto websocket
http://mitsuruog.github.io/what-mqtt/   mqtt websocket

coap
http://blog.csdn.net/xukai871105/article/details/45167069
CoAP学习笔记――STM32平台上实现CoAP Server   http://blog.csdn.net/xukai871105/article/details/45670033/
http://www.ituring.com.cn/tupubarticle/3795
CoAP是简化了HTTP协议的RESTful API，因而也只提供了REST的四个方法，即PUT,GET,POST和DELETE。 CoAP采用了二进制报头，而不是文本报头(text header)
CoAP提供了资源发现机制。这就是的客户端理解哪些URI是被支持，并且客户端可以获知该URI的具体含义。CoAP协议建议，服务器端应该支持一个/.well-known/core，该URI可以被任何客户端访问。一个专门用于资源发现的服务器必须侦听默认的5683端口。
当客户端请求该预先协商好的URI时，服务器返回一系列的URI。这些URI遵循CoRE链接标准。  http://blog.csdn.net/xukai871105/article/details/17765919
Resource discovery  Based on Web Linking and Core Link Format RFC6690   GET /.well-known/core  
DTLS (TLS/SSL for Datagrams)  Focus on Elliptic Curve Cryptography (ECC)

https://www.phodal.com/blog/use-coap-block-send-data-on-iot-coap/
http://mqtt.phodal.com/
https://github.com/iot-works/iot-coap
http://blog.csdn.net/xukai871105/article/details/17734163
https://thingmq.com/
https://thethings.io/
http://coap.technology/impls.html
https://github.com/eclipse/californium
https://github.com/eclipse/leshan
http://coap.me/
https://docs.google.com/presentation/d/1dDZ7VTdjBZxnqcIt6qoX742d6dHbzap-D_H8Frf3LRE/edit?pli=1#slide=id.g3501b5b9a_012
https://github.com/morkai/h5.coap
http://dev.modouwifi.com/    魔豆路由器 Web Services API 规格文档

CoAP-cli，一个基于NodeJS的CoAP命令行工具，其核心是基于Node-CoAP库。  npm install coap-cli -g
http://segmentfault.com/a/1190000002511350   coap get coap://vs0.inf.ethz.ch/
http://blog.csdn.net/xukai871105/article/details/39213061
http://blog.csdn.net/xukai871105/article/details/39120399
http://segmentfault.com/a/1190000003870040

libcoap，一个用C写的CoAP命令行工具。libcoap是CoAP协议的C语言实现，libcoap提供server和client功能
http://blog.csdn.net/xukai871105/article/details/44980041   CoAP学习笔记――Libcoap安装和使用
FireFox Copper， 一个Firefox的插件。 https://addons.mozilla.org/en-US/firefox/addon/copper-270430/

http://www.eclipse.org/californium/
To get started you can test the following CoAP sandboxes:
coap://iot.eclipse.org/
coap://vs0.inf.ethz.ch/
coap://coap.me/

https://community.arm.com/servlet/JiveServlet/previewBody/8633-102-2-15471/ARM%20CoAP%20Tutorial%20April%2030%202014.pdf
<dependency>
     <groupId>org.eclipse.californium</groupId>
     <artifactId>californium-core</artifactId>
     <version>1.0.0-RC2</version>
</dependency>

https://projects.eclipse.org/projects/technology.californium  组播没实现
http://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php
http://www.doc88.com/p-3197961704940.html
http://blog.csdn.net/lxl584685501/article/details/45152123?ref=myread
http://people.inf.ethz.ch/mkovatsc/californium.php
http://people.inf.ethz.ch/mkovatsc/resources/californium/cf-scalability.pdf

http://watr.li/play2-californium.html  Californium meets the Play Framework


websocket
http://examples.javacodegeeks.com/enterprise-java/jetty/jetty-websocket-example/
http://www.waylau.com/netty-websocket-chat/
https://github.com/ticofab/simple-play-websocket-server
https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers
http://www.javacirecep.com/internet/java-a-simple-websocket-example/