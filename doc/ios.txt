http://www.infoq.com/cn/news/2015/11/ibireme-interview
http://www.infoq.com/cn/news/2016/05/lody-interview/
https://github.com/Tencent/wcdb  WCDB是一个高效、完整、易用的移动数据库框架，基于SQLCipher，支持iOS, macOS和Android
https://github.com/loyinglin/LearnOpenGLES

https://www.apple.com/education/everyone-can-code/
https://itunes.apple.com/us/author/apple-education/id939801385?mt=11
https://segmentfault.com/a/1190000000487144  14 款好用的 iOS 开发工具
http://blog.csdn.net/potato512/article/details/52176073  自动打包
https://my.oschina.net/u/727843/blog/391946
http://xudafeng.github.io/slide/archives/native-in-practice/#/   移动客户端编程实战
https://github.com/fengling2300/networkTest   http://oncenote.com/2014/10/21/Security-1-HTTPS/

https://zhuanlan.zhihu.com/p/26955368  如何打造易扩展的高性能图片组件
https://www.qcloud.com/community/article/164816001481011837  经验之道：最有效的 iOS 内存泄漏检测
https://www.qcloud.com/community/article/238578  iOS 中的 Promise 设计模式
http://blog.cnbang.net/tech/3354/   iOS 开发技术栈与进阶
http://blog.cnbang.net/internet/3245/  如何面试iOS工程师
http://blog.fir.im/fir-im-weekly161223/   iOS / Android 动态化更新方案盘点
http://mp.weixin.qq.com/s/qRW_akbU3TSd0SxpF3iQmQ   DynamicCocoa：滴滴 iOS 动态化方案的诞生与起航.  DynamicCocoa 这种方案，绕了一个更大的道，从编译阶段入手，通过 clang 把 OC 代码编译成自己定制的 JS 格式，再动态下发去执行，做到原生开发，动态运行，主打动态添加功能
http://pingguohe.net/2016/12/20/Tangram-design-and-practice.html    页面动态化的基础 —— Tangram
https://github.com/wequick/Small
https://github.com/SnapKit/Masonry  自动布局
https://objectivec2swift.com/#/home/converter/  转swift
https://yq.aliyun.com/articles/74464?spm=5176.8067842.tagmain.5.X20x6y  深入Objective-C Runtime机制(一):类和对象的实现
http://www.cnblogs.com/kenshincui/p/3983982.html  iOS开发系列--并行开发其实很容易

http://colin1994.github.io/2017/04/09/OpenGLES-Lesson02/

http://indieambitions.com/idevblogaday/mixing-videos-gpuimage/
http://16623.courses.cs.cmu.edu/
https://github.com/slucey-cs-cmu-edu/CIFaceFeature_Lena
https://github.com/slucey-cs-cmu-edu/Smerk_Example

直播
http://www.voidcn.com/blog/XjingweiU/article/p-1898404.html  GPUImage简单说明
https://github.com/tapharmonic/Learning-AV-Foundation
http://www.hudongdong.com/ios/546.html  IOS视频编辑功能详解上篇-添加水印   https://github.com/DamonHu/VideoEditDemo
http://www.hudongdong.com/ios/550.html  IOS视频编辑功能详解下篇-视频裁剪、视频拼接、音视频的处理
导入图片 (任意方式导入, 这里用GPUImagePicture来载入, url 是对应图片的地址)  [[GPUImagePicture alloc] initWithURL: url];
https://github.com/loyinglin/LearnOpenGLES
https://github.com/Tim9Liu9/TimLiu-iOS#%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86
https://github.com/IFTTT/FastttCamera
https://github.com/andrei200287/SAVideoRangeSlider
https://github.com/loyinglin/GPUImage 源码级别对GPUImage进行剖析    http://www.jianshu.com/p/095107abc7ba
https://www.objccn.io/issue-21-9/ 基于 OpenCV 的人脸识别
https://github.com/tiantianlan/LiveExplanation  直播技术的总结  http://www.jianshu.com/p/bd42bacbe4cc
https://github.com/BradLarson/GPUImage
https://github.com/hardman/AWLive
https://github.com/chenliming777/LMLiveStreaming    https://github.com/goodow/GDLiveStreaming
https://github.com/LaiFengiOS/LFLiveKit
https://github.com/ksvc/KSYLive_iOS
https://github.com/ksvc/KSYMediaEditorKit_iOS
https://github.com/ksvc/KSYMediaPlayer_iOS
https://github.com/chenliming777/LMLiveStreaming
https://github.com/Flipboard/FLAnimatedImage
http://blog.csdn.net/u1031/article/details/50788093   用GPUImage来给视频加入水印
GPUImageVideoCamera  GPUImage最关键在于GPUImageFramebuffer这个类，这个类会保存当前处理好的图片信息。
滤镜处理的原理就是把静态图片或者视频的每一帧进行图形变换再显示出来。它的本质就是像素点的坐标和颜色变化，这点从GPUImage项目中滤镜的源代码就可以了解到。
https://yq.aliyun.com/articles/55708  使用GPUImage实现视频滤镜
http://www.cnblogs.com/fuunnyy/p/6753910.html  美颜需要用到CoreImage框架下的CIDetector和CIFeature，以及CIFaceBalance等相关的类。
http://colin1994.github.io/2016/10/21/Core-Image-OverView/
http://www.jianshu.com/p/945fc806a9b4  基于GPUImage的实时美颜滤镜
http://www.jianshu.com/p/ba1f79f8f6fa  在直播应用中添加Faceu效果
http://www.jianshu.com/p/b69bd12ada07   关于视频直播技术，你想要知道的都在这里了（二）处理
Android 也有 GPUImage 这个库的移植：https://github.com/CyberAgent/android-gpuimage 同时，Google 官方也开源了一个伟大的库，覆盖了 Android 上面很多多媒体和图形图像相关的处理：https://github.com/google/grafika
https://sqhtiamo.github.io/note/public/2017/02/09/live/qiniu/  七牛视频直播学习笔记
http://blog.qiniu.com/archives/category/视频直播技术
http://blog.qiniu.com/archives/7463
1、推流：LFLiveKit 2、播放：ijkplayer 3、服务器:nginx+rtmp+ffmpeg 
http://www.52learn.wang/archives/1429
一个完整的直播系统需要涉及到的技术主要包括以下方面： 1.采集、2.滤镜处理、3.编码、4.推流、5.CDN分发、6.拉流、7.解码、8.播放、9.聊天互动。 其中1～4由LFLiveKit完成（2由GPUImage完成），5就是搭建的本地服务器，6～8由ijkplayer完成
http://notes.zhaoshuai123.com/2016/10/17/视频直播类App研究总结/
http://7xrubd.com1.z0.glb.clouddn.com/图像技术在直播中的应用-邱彦林-1021.pdf


https://my.oschina.net/leejun2005/blog/504732  iOS 统计打点那些事  https://github.com/steipete/Aspects
http://www.jianshu.com/p/87ef6720a096   最快让你上手ReactiveCocoa之基础篇
http://www.jianshu.com/p/e10e5ca413b7   最快让你上手ReactiveCocoa之进阶篇
RAC核心是Signal，对应的类为RACSignal。它其实是一个信号源，Signal会给它的订阅者（Subscriber）发送一连串的事件，一个Signal可比作流水线中的一段管线，负责决定管线传输什么样的数据。Subscriber是Signal的订阅者，我们将Subscriber比作管线上的工人，它在拿到数据后对其进行加工处理。
管线启动后，会返回一个RACDisposable对象。外部可以通过[RACDisposable dispose]方法随时停止这段管线的工作。一旦管线停止，subscriber worker将不再处理管线传送过来的任何类型的数据。
http://www.jianshu.com/p/d262f2c55fbe   http://www.jianshu.com/p/5bc3a4c971c6   Promise,RAC与高阶函数
http://www.cocoachina.com/ios/20150817/13071.html
http://draveness.me/racchannel.html?utm_source=tuicool&utm_medium=referral  RAC 中的双向数据绑定 RACChannel
http://draveness.me/racdelegateproxy.html   从代理到 RACSignal

http://www.jianshu.com/p/2e7200bd5b79  HTTP 2.0 使用新的二进制格式：基本的协议单位是帧，每个帧都有不同的类型和用途，规范中定义了10种不同的帧。例如，报头(HEADERS)和数据(DATA)帧组成了基本的HTTP 请求和响应；其他帧例如 设置(SETTINGS),窗口更新(WINDOW_UPDATE), 和推送承诺(PUSH_PROMISE)是用来实现HTTP/2的其他功能。
https://youzanmobile.github.io/2017/03/13/webview-container-ios/   iOS WebView 的 Hybrid 框架设计
https://youzanmobile.github.io/2017/03/29/iconfont-in-app/   App中使用Iconfont的整套方案
https://youzanmobile.github.io/2017/04/07/security-on-mobile/   安全图片方案

http://www.cnblogs.com/kenshincui/p/3985090.html
http://www.cnblogs.com/kenshincui/p/3890880.html  IOS程序开发概览
http://www.cnblogs.com/csharpstyle/articles/4176630.html    Ad Hoc 方式发布 APP
https://my.oschina.net/u/2462807/blog/796698  手把手教你, Jenkins构建iOS项目

https://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&mid=2651112909&idx=1&sn=cf3949b08f602e40e7125b0a4b5b184c   Rexxar：豆瓣对混合开发的思考
https://wereadteam.github.io/2016/05/23/GYBootingProtection/  微信读书开发了 iOS 连续闪退保护工具：GYBootingProtection，检测连续闪退，在连续闪退出现时，尝试自修复 App
https://wereadteam.github.io/2016/07/06/GYDataCenter/  GYDataCenter：高性能数据库框架
https://wereadteam.github.io/2016/02/25/GYHttpMock/  GYHttpMock：iOS HTTP请求模拟工具
https://wereadteam.github.io/2016/02/22/MLeaksFinder/  MLeaksFinder：精准 iOS 内存泄露检测工具
http://blog.csdn.net/colorapp/article/details/47007431  unit test
http://blog.shiqichan.com/using-afnetworking-sdwebimage-and-ohhttpstubs/

第三方库
https://github.com/SnapKit/Masonry   
https://github.com/mxcl/PromiseKit
https://github.com/danielgindi/Charts 报表
https://www.oschina.net/p/lottie  动画
http://www.oschina.net/p/ohhttpstubs 
https://github.com/WenchaoD/FSCalendar
https://github.com/dzenbot/DZNEmptyDataSet
https://github.com/ViccAlexander/Chameleon
https://www.oschina.net/translate/33-ios-open-source-libraries-that-will-dominate-2017?lang=chs&page=1#

http://pingguohe.net/2016/12/20/Tangram-design-and-practice.html  页面动态化的基础 —— Tangram
http://pingguohe.net/2016/01/31/lazyscroll.html    iOS 高性能异构滚动视图构建方案 —— LazyScrollView
https://yq.aliyun.com/articles/71685?spm=5176.100239.blogcont71215.19.x83PHy   iOS大型项目解耦方案有难度？BeeHive设计优化来帮助
http://www.jianshu.com/p/07f1cb2b2773  阿里BeeHive源码小读  https://github.com/alibaba/BeeHive
https://www.v2ex.com/t/322579    BeeHive 是用于 iOS 的 App 模块化编程的框架实现方案
http://www.jianshu.com/p/24f6299ebe82    BeeHive —— 一个优雅但还在完善中的解耦框架
http://www.jianshu.com/p/76da56b3bd55  iOS 组件化 —— 路由设计思路分析
https://github.com/meili/MGJRouter

http://www.jianshu.com/p/8a54c26a9349  2016年3月iOS面试总结
http://www.jianshu.com/p/cd4c816111db  给iOS 模拟器“安装”app文件
http://www.jianshu.com/p/41ecb06ae95f  手把手教你利用Jenkins持续集成iOS项目
http://www.jianshu.com/p/d085032d4788  由FlexBox算法强力驱动的Weex布局引擎

ATS检测工具: 苹果电脑可以用自带的工具进行检测，命令如下：nscurl --ats-diagnostics --verbose 网址

lua
https://my.oschina.net/vimfung/blog/814212  Lua与ObjC的交互
https://my.oschina.net/vimfung/blog/805037  使用LuaScriptCore来让Lua与iOS进行交互

http://zackzheng.info/2016/02/26/2016-02-26-app-image-compress-upload-to-server/   App图片压缩裁剪原理和上传方案，以及那些有趣的事儿
https://yq.aliyun.com/articles/59447?spm=5176.100239.bloglist.17.OkOb5e  CocoaPods的使用及其原理
http://www.jianshu.com/p/228535226656   27个iOS开源库，让你的开发坐上火箭吧
https://www.oschina.net/translate/27-ios-open-source-libraries-to-skyrocket-your-development  27 款 iOS 开源库，让你的开发溜到飞起
https://github.com/Tim9Liu9/TimLiu-iOS  开源库
http://www.cocoachina.com/cms/wap.php?action=article&id=7746  第三方开源库
AFNetworking MKNetworkKit CocoaAsyncSocket  fmdb  MagicalRecord  MBProgressHUD GPUImage SVProgressHUD FLAnimatedImage
NSJSONSerialization    http://blog.csdn.net/shouqiangwei/article/details/11557919?utm_source=tuicool
http://objccn.io/
http://www.jianshu.com/p/b0bf2368fb95   iOS最佳实践 
http://pan.baidu.com/s/1mgIbCz2  ios8

http://m.163.com/special/newsclient/ios_libraries.html  网易类库
http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&mid=2651112821&idx=1&sn=2987ba2c9d68e3982e795d9eeb15f82b  豆瓣App的模块化实践
http://blog.ibireme.com/2013/09/23/ios-third-party-libs/  iOS 第三方开源库的吐槽和备忘
http://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/  iOS 保持界面流畅的技巧
http://idlelife.org/archives/733    AsyncDisplayKit入门指南
https://github.com/facebook/AsyncDisplayKit  

自动化测试
http://www.cnblogs.com/hyddd/p/5571229.html
https://yq.aliyun.com/articles/64671?spm=5176.100239.blogcont64822.13.UwZpZ1    Macaca-Java版入门指南
https://macacajs.com/inspector?spm=5176.100239.blogcont64671.26.wWF5pB
https://yq.aliyun.com/articles/64822?spm=5176.100239.topwz.1.Qh0UpW
iTools就是使用这玩意儿和iPhone通讯的，libimobiledevice是破解iTunes和iPhone的通讯后实现的lib。Xcode5之前是fruitstrap，fruitstrap后来放弃维护，Xcode5后使用libimobiledevice。

Macaca 对于 native 的自动化测试主要利用了 UIAutomator UIAutomator 是随 Android SDK 一起发布的一个测试框架，该测试框架提供了一系列 API，利用这些 API 我们可以编程和安卓 App 进行交互，例如：打开设置菜单，点击，滑动等。并且可以对设备进行物理指令操作，如：旋转设备，获取设备分辨率等。该测试框架的 jar 包可以在 SDK 的安装目录中找到:
$ANDROID_HOME/platforms/android-$version/uiautomator.jar
Macaca 主要有两个模块来负责操作设备的自动化测试，一个是 macaca-adb ，一个是 uiautomator-client 。 macaca-adb 用 Nodejs 对安卓 adb 命令进行了包装，以供其他 node 模块调用，可以用其来进行模拟器的启动，端口号映射，获取设备等操作。
uiautomator-client 模块会在本地机器和安卓设备之间建立 socket 连接，然后自动化指令就通过 socket 进行传输。
http://www.tuicool.com/articles/nABjMbv
http://www.cnblogs.com/hyddd/p/5593479.html
http://www.cnblogs.com/fnng/p/5873878.html
iOS的自动化测试框架可分为两种：注入式和非注入式。注入式的框架通常会提供一些Lib或者是Framework，要求测试人员在待测应用的代码工程中导入这些内容，框架可以通过他们完成对app的驱动，典型的比如monkeytalk。非注入式的框架则是通过苹果提供的instruments工具，调用官方的接口函数，实现对app的相关操作，典型的就是uiautomation，appium
https://github.com/Carthage/Carthage   库管理
https://github.com/ibireme/YYKit
https://github.com/ibireme/YYDispatchQueuePool
http://blog.ibireme.com/2015/11/02/ios_image_tips/  图片处理
http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/  移动端图片格式调研
http://blog.ibireme.com/2015/10/23/ios_model_framework_benchmark/  json
http://mogu.io/ios-analytics-115   iOS 统计打点那些事

http://yq.aliyun.com/articles/1480
https://github.com/alibaba/wax  lua
http://segmentfault.com/a/1190000004268513  Android程序员 如何入门iOS
http://jspatch.com/Docs/price
http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=400011053&idx=1&sn=81ed095f6fb9f7a4345ff50285264be1&scene=1&srcid=0309AZCJwCslk9oehil6nnDp#rd
https://github.com/bang590/JSPatchConvertor
http://news.oneapm.com/hotfix-bug/   比如 iOS 下的 JSPatch ， WaxPatch ，Android 下的 Dexpose，AndFix ，ClassLoader 都是比较成熟 Hot Patch 动态部署解决方案。
http://philonpang.github.io/blog/2015/11/20/ali-waxshi-yong-he-yuan-ma-jie-xi-xi-lie-waxde-ji-cheng-he-diao-shi-huan-jing-da-jian/  waxpatch


http://mp.weixin.qq.com/s?__biz=MjM5OTM0MzIwMQ==&mid=404370707&idx=1&sn=049fc87eaaaf09933967dfccc159fc24&scene=1&srcid=0317HQR6Ngdyw7l0sA0FKIs1#rd    在写一个iOS应用之前必须做的7件事
http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=400011053&idx=1&sn=81ed095f6fb9f7a4345ff50285264be1&scene=1&srcid=0309AZCJwCslk9oehil6nnDp#rd
JSContext 是 JS 代码的执行环境，可以给 JSContext 添加方法，JS 就可以直接调用这个方法
http://www.cocoachina.com/swift/20160318/15712.html?spm=5176.blog8634.yqblogcon1.12.tMzPKF     Hello，服务端 Swift
http://mp.weixin.qq.com/s?__biz=MjM5OTM0MzIwMQ==&mid=404370707&idx=5&sn=9107377d64e873b887f57fb131cc5983&scene=1&srcid=0317DHkzCCu68VLACnZsKqnu#rd    Injection for Xcode：成吨的提高开发效率


https://github.com/IFTTT/jot  adding drawings and text to images. 
https://github.com/IFTTT/FastttCamera   Fasttt and easy camera framework for iOS with customizable filters 
https://github.com/IFTTT/JazzHands simple keyframe-based animation framework for UIKit. Perfect for scrolling app intros
https://github.com/IFTTT/IFTTTLaunchImage

升级
http://www.infoq.com/cn/articles/wechat-ios9-adaptation  微信iOS 9适配总结

xctool
xctool -scheme testOClintNew archive (对应xcode的archive)  或者 
xctool -scheme testOClintNew build  (对应xcode的build) 
若你的工程使用了workspace,格式如下：xctool -workspace testOClintWorkspace -scheme testOClintNew build 

fir.im
http://nomad-cli.com/    https://github.com/nomad/shenzhen
https://github.com/FIRHQ/fir-cli/blob/master/doc/build_ipa.md   fir build_ipa path/to/workspace -w -S <scheme name> -p -Q
http://club.fir.im/topic/54f3d1a474c4c85e73e4ac13
https://github.com/heyuan110/BashShell?spm=5176.100239.blogcont5028.4.kFcLtR
http://www.tuicool.com/articles/QFruyq2


fastlane
http://www.jianshu.com/p/9ae446d76271   iOS项目的持续集成与管理[译]
http://icyleaf.com/2016/07/fastlane-in-action/?utm_source=tuicool&utm_medium=referral  fastlane
http://icyleaf.com/2016/07/intro-fastlane-automation-for-ios-and-android/
http://www.jianshu.com/p/41ecb06ae95f   手把手教你利用Jenkins持续集成iOS项目
http://www.jianshu.com/p/002e1061ee08
http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&mid=2651112713&idx=1&sn=dd049e7edf3402af887c1fc295f43b98&scene=21#wechat_redirect


test
http://www.infoq.com/cn/news/2016/02/earlgrey-ios-functional-ui-test Google推出iOS功能性UI测试框架EarlGrey
http://houlianpi.github.io/blog/ios-testframework.html?utm_source=tuicool&utm_medium=referral
http://www.secbox.cn/hacker/8235.html
Appecker是一款用于iOS系列系统的自动化测试框架。 Appecker采用Objective C为测试用例的开发语言, 完整支持iOS上的UI功能测试、单元测试并且可以良好地支持自动化运行

hybrid
http://www.infoq.com/cn/news/2016/03/React-Native-develop-iOS    用React Native开发第一个iOS应用
https://github.com/marcuswestin/WebViewJavascriptBridge
http://www.tuicool.com/articles/ea2An2Q
- (BOOL)webView:(KCWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType

stringByEvaluatingJavaScriptFromString
[NSURLProtocol registerClass:[KCWebViewURLProtocol class]];
SEL method = NSSelectorFromString(methodName);
if(clz && [clz respondsToSelector:method])
    
	[clz performSelector:method withObject:webView withObject:argList];


build
安装打包插件 sudo gem install cocoapods-packager
打包 pod package Lib.podspec –library –force 
–library指定打包成 .a 文件，如果不带上将会打包成 .framework 文件。 –force是指强制覆盖。
http://hcoder.cn/2015/08/19/cocoaPods/
http://www.cnblogs.com/brycezhang/p/4117180.html  使用CocoaPods开发并打包静态库
https://cnbin.github.io/blog/2015/09/06/cocoapods-shi-yong-shou-ce/  CocoaPods 使用手册
https://fastlane.tools/
https://github.com/facebook/xctool
http://www.cnblogs.com/brycezhang/p/4117180.html  pod生成类库
http://www.cnblogs.com/brycezhang/p/4097487.html  自动build
http://www.cnblogs.com/brycezhang/p/3675670.html  CocoaPods版本升级

xcode
http://pan.baidu.com/s/1kTCCV47#path=%252FXcode%25206.3
http://www.douban.com/group/topic/73154481/
http://www.cnblogs.com/yipu/p/4308110.html  10.10 vm
10.9.5 下载地址：http://pan.baidu.com/s/1jGHxFZS　解压密码：1024
10.10.2下载地址：http://pan.baidu.com/s/1pJLrzp5　提取码：fuxf　解压密码：honghaosheji

http://blog.cnbluebox.com/blog/2014/08/26/ioser-wei-ma-sao-miao/    AVFoundation扫码
http://www.mexiqq.com/2014/07/25/xcode6+ios8%E6%9C%80%E6%96%B0%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%95%99%E7%A8%8B/    xcode6+ios8最新真机调试教程
http://www.mexiqq.com/2014/10/18/iOS-%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/   iOS 开发中的设计模式
http://strivingboy.github.io/blog/2014/11/08/scan-qrcode/  二维码
https://github.com/100mango/zen/blob/master/iOS%E5%AD%A6%E4%B9%A0%EF%BC%9AAVFoundation%20%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86/iOS%E5%AD%A6%E4%B9%A0%EF%BC%9AAVFoundation%20%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86%20.md


react native
https://github.com/vczero/react-native-lession
http://vczero.github.io/react_native/%E7%AC%AC5%E7%AF%87ui%E7%BB%84%E4%BB%B6.html
http://m.oschina.net/blog/394427
http://facebook.github.io/react-native/docs/tutorial.html#content
http://www.iversong.com/2015/05/02/simple-react-desc/
https://github.com/lazaronixon/react-native-qrcode-reader
https://rnplay.org/apps/6JolNQ  webview
https://appetize.io/demo    模拟器
http://www.slideshare.net/andrewrota/the-complementarity-of-reactjs-and-web-components


baas
http://www.bmob.cn/docs
https://leancloud.cn/
http://www.zhihu.com/question/22098754

thread
https://www.zybuluo.com/MicroCai/note/64272   Effective Objective-C Notes：GCD 实现同步锁
http://tutuge.me/2015/04/03/something-about-gcd/    GCD使用经验与技巧浅谈
http://blog.csdn.net/guodongsun0/article/details/46380895
[self performSelectorInBackground:@selector(loadImage:) withObject:[NSNumber numberWithInt:i]];
[self performSelectorOnMainThread:@selector(updateImage:) withObject:imageData waitUntilDone:YES];
NSInvocationOperation *invocationOperation=[[NSInvocationOperation alloc]initWithTarget:self selector:@selector(loadImage) object:nil];
[[NSOperationQueue mainQueue] addOperationWithBlock:^{     [self updateImageWithData:data andIndex:i];   }];

NSThread *thread=[[NSThread alloc]initWithTarget:self selector:@selector(loadImage:) object:[NSNumber numberWithInt:i]];
[NSThread sleepForTimeInterval:2.0];
GCD(Grand Central Dispatch)是基于C语言开发的一套多线程开发机制，GCD中的队列分为并行队列和串行队列两类
dispatch_queue_t mainQueue= dispatch_get_main_queue();   //更新UI界面,此处调用了GCD主线程队列的方法
dispatch_queue_t globalQueue=dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);   // 取得一个全局的并发队列
可以使用NSThread的currentThread方法取得当前线程，使用 sleepForTimeInterval:方法让当前线程休眠。

http://tutuge.me/2016/03/29/modular-and-component-summary/  对组件化与模块化的思考与总结 
http://tutuge.me/2016/12/25/TTGPuzzleVerify/   开源项目-拼图验证控件TTGPuzzleVerify的实现
